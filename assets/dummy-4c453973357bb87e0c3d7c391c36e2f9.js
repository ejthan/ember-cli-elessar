"use strict";define("dummy/app",["exports","ember","ember/resolver","ember/load-initializers","dummy/config/environment"],function(e,t,a,n,r){var l;t["default"].MODEL_FACTORY_INJECTIONS=!0,l=t["default"].Application.extend({modulePrefix:r["default"].modulePrefix,podModulePrefix:r["default"].podModulePrefix,Resolver:a["default"]}),(0,n["default"])(l,r["default"].modulePrefix),e["default"]=l}),define("dummy/components/app-version",["exports","ember-cli-app-version/components/app-version","dummy/config/environment"],function(e,t,a){var n=a["default"].APP.name,r=a["default"].APP.version;e["default"]=t["default"].extend({version:r,name:n})}),define("dummy/components/elessar-range",["exports","ember","ember-cli-elessar/components/elessar-range"],function(e,t,a){e["default"]=a["default"]}),define("dummy/controllers/application",["exports","ember"],function(e,t){e["default"]=t["default"].Controller.extend({values:[[20,40],[75,85]],snap:9e5,minSize:36e5,minCtrl:moment().startOf("day").format("LLLL"),maxCtrl:moment().endOf("day").format("LLLL"),timeValues:[[moment().startOf("day").add(6,"hours").format("LLLL"),moment().startOf("day").add(13,"hours").format("LLLL")],[moment().startOf("day").add(15.5,"hours").format("LLLL"),moment().startOf("day").add(19.5,"hours").format("LLLL")]],valueParse:function(e){return moment(e).valueOf()},valueFormat:function(e){return moment(e).format("LLLL")},label:function(e){return moment(e[1]).from(e[0],!0)},actions:{onChangeCtrl:function(e,a,n){var r=this;n.ranges.forEach(function(e){var a=e.range.map(e.perant.normalise,e.perant);if(e.$data.model)e.$data.model.set("range",a);else{var n=t["default"].Object.create({id:3,range:a});r.get("model").pushObject(n),e.$data.model=n}})},onChangingCtrl:function(e,t){}}})}),define("dummy/controllers/array",["exports","ember"],function(e,t){e["default"]=t["default"].Controller}),define("dummy/controllers/object",["exports","ember"],function(e,t){e["default"]=t["default"].Controller}),define("dummy/helpers/pluralize",["exports","ember-inflector/lib/helpers/pluralize"],function(e,t){e["default"]=t["default"]}),define("dummy/helpers/singularize",["exports","ember-inflector/lib/helpers/singularize"],function(e,t){e["default"]=t["default"]}),define("dummy/initializers/app-version",["exports","ember-cli-app-version/initializer-factory","dummy/config/environment"],function(e,t,a){e["default"]={name:"App Version",initialize:(0,t["default"])(a["default"].APP.name,a["default"].APP.version)}}),define("dummy/initializers/container-debug-adapter",["exports","ember-resolver/container-debug-adapter"],function(e,t){e["default"]={name:"container-debug-adapter",initialize:function(){var e=arguments[1]||arguments[0];e.register("container-debug-adapter:main",t["default"]),e.inject("container-debug-adapter:main","namespace","application:main")}}}),define("dummy/initializers/data-adapter",["exports","ember"],function(e,t){e["default"]={name:"data-adapter",before:"store",initialize:t["default"].K}}),define("dummy/initializers/ember-data",["exports","ember-data/setup-container","ember-data/-private/core"],function(e,t,a){e["default"]={name:"ember-data",initialize:t["default"]}}),define("dummy/initializers/export-application-global",["exports","ember","dummy/config/environment"],function(e,t,a){function n(){var e=arguments[1]||arguments[0];if(a["default"].exportApplicationGlobal!==!1){var n,r=a["default"].exportApplicationGlobal;n="string"==typeof r?r:t["default"].String.classify(a["default"].modulePrefix),window[n]||(window[n]=e,e.reopen({willDestroy:function(){this._super.apply(this,arguments),delete window[n]}}))}}e.initialize=n,e["default"]={name:"export-application-global",initialize:n}}),define("dummy/initializers/injectStore",["exports","ember"],function(e,t){e["default"]={name:"injectStore",before:"store",initialize:t["default"].K}}),define("dummy/initializers/store",["exports","ember"],function(e,t){e["default"]={name:"store",after:"ember-data",initialize:t["default"].K}}),define("dummy/initializers/transforms",["exports","ember"],function(e,t){e["default"]={name:"transforms",before:"store",initialize:t["default"].K}}),define("dummy/instance-initializers/ember-data",["exports","ember-data/-private/instance-initializers/initialize-store-service"],function(e,t){e["default"]={name:"ember-data",initialize:t["default"]}}),define("dummy/models/example",["exports","ember-data","ember"],function(e,t,a){e["default"]=t["default"].Model.extend({from:t["default"].attr("number"),to:t["default"].attr("number"),range:a["default"].computed("from","to",function(){return[this.get("from"),this.get("to")]})})}),define("dummy/resolver",["exports","ember-resolver"],function(e,t){e["default"]=t["default"]}),define("dummy/router",["exports","ember","dummy/config/environment"],function(e,t,a){var n=t["default"].Router.extend({location:a["default"].locationType});n.map(function(){}),e["default"]=n}),define("dummy/routes/application",["exports","ember"],function(e,t){e["default"]=t["default"].Route.extend({model:function(){return t["default"].A([t["default"].Object.create({id:1,range:[10,30]}),t["default"].Object.create({id:2,range:[50,70]})])}})}),define("dummy/services/ajax",["exports","ember-ajax/services/ajax"],function(e,t){Object.defineProperty(e,"default",{enumerable:!0,get:function(){return t["default"]}})}),define("dummy/templates/application",["exports"],function(e){e["default"]=Ember.HTMLBars.template(function(){var e=function(){return{meta:{fragmentReason:!1,revision:"Ember@2.4.2",loc:{source:null,start:{line:23,column:2},end:{line:29,column:2}},moduleName:"dummy/templates/application.hbs"},isEmpty:!1,arity:1,cachedFragment:null,hasRendered:!1,buildFragment:function(e){var t=e.createDocumentFragment(),a=e.createTextNode("    ");e.appendChild(t,a);var a=e.createElement("div");e.setAttribute(a,"class","model-range");var n=e.createTextNode("\n      ");e.appendChild(a,n);var n=e.createElement("p"),r=e.createTextNode("\n        ");e.appendChild(n,r);var r=e.createElement("span");e.setAttribute(r,"class","range-id");var l=e.createComment("");e.appendChild(r,l),e.appendChild(n,r);var r=e.createTextNode("  - ");e.appendChild(n,r);var r=e.createComment("");e.appendChild(n,r);var r=e.createTextNode("\n      ");e.appendChild(n,r),e.appendChild(a,n);var n=e.createTextNode("\n    ");e.appendChild(a,n),e.appendChild(t,a);var a=e.createTextNode("\n");return e.appendChild(t,a),t},buildRenderNodes:function(e,t,a){var n=e.childAt(t,[1,1]),r=new Array(2);return r[0]=e.createMorphAt(e.childAt(n,[1]),0,0),r[1]=e.createMorphAt(n,3,3),r},statements:[["content","range.id",["loc",[null,[26,31],[26,43]]]],["content","range.range",["loc",[null,[26,54],[26,69]]]]],locals:["range"],templates:[]}}();return{meta:{fragmentReason:{name:"triple-curlies"},revision:"Ember@2.4.2",loc:{source:null,start:{line:1,column:0},end:{line:48,column:0}},moduleName:"dummy/templates/application.hbs"},isEmpty:!1,arity:0,cachedFragment:null,hasRendered:!1,buildFragment:function(e){var t=e.createDocumentFragment(),a=e.createElement("div");e.setAttribute(a,"class","container");var n=e.createTextNode("\n  ");e.appendChild(a,n);var n=e.createElement("h1"),r=e.createTextNode("Welcome to ember-cli-elessar");e.appendChild(n,r),e.appendChild(a,n);var n=e.createTextNode("\n\n  ");e.appendChild(a,n);var n=e.createComment("");e.appendChild(a,n);var n=e.createTextNode("\n\n  ");e.appendChild(a,n);var n=e.createElement("h2"),r=e.createTextNode("Possible solution for model binding");e.appendChild(n,r),e.appendChild(a,n);var n=e.createTextNode("\n\n  ");e.appendChild(a,n);var n=e.createComment("");e.appendChild(a,n);var n=e.createTextNode("\n\n");e.appendChild(a,n);var n=e.createComment("");e.appendChild(a,n);var n=e.createTextNode("\n  ");e.appendChild(a,n);var n=e.createElement("h2"),r=e.createTextNode("With moment.js");e.appendChild(n,r),e.appendChild(a,n);var n=e.createTextNode("\n\n  ");e.appendChild(a,n);var n=e.createComment("");e.appendChild(a,n);var n=e.createTextNode("\n");e.appendChild(a,n),e.appendChild(t,a);var a=e.createTextNode("\n");return e.appendChild(t,a),t},buildRenderNodes:function(e,t,a){var n=e.childAt(t,[0]),r=new Array(4);return r[0]=e.createMorphAt(n,3,3),r[1]=e.createMorphAt(n,7,7),r[2]=e.createMorphAt(n,9,9),r[3]=e.createMorphAt(n,13,13),r},statements:[["inline","elessar-range",[],["values",["subexpr","@mut",[["get","values",["loc",[null,[5,11],[5,17]]]]],[],[]],"snap",1,"rangeClass","dummy-range","barClass","dummy-bar"],["loc",[null,[4,2],[9,4]]]],["inline","elessar-range",[],["values",["subexpr","@mut",[["get","model",["loc",[null,[14,11],[14,16]]]]],[],[]],"bindModel",!0,"snap",1,"onChange",["subexpr","action",["onChangeCtrl"],[],["loc",[null,[17,13],[17,36]]]],"onChanging",["subexpr","action",["onChangingCtrl"],[],["loc",[null,[18,15],[18,40]]]],"rangeClass","dummy-range","barClass","dummy-bar"],["loc",[null,[13,2],[21,4]]]],["block","each",[["get","model",["loc",[null,[23,10],[23,15]]]]],[],0,null,["loc",[null,[23,2],[29,11]]]],["inline","elessar-range",[],["values",["subexpr","@mut",[["get","timeValues",["loc",[null,[34,11],[34,21]]]]],[],[]],"bindModel",!1,"snap",1,"rangeClass","dummy-range","barClass","dummy-bar","valueParse",["subexpr","@mut",[["get","valueParse",["loc",[null,[39,15],[39,25]]]]],[],[]],"valueFormat",["subexpr","@mut",[["get","valueFormat",["loc",[null,[40,16],[40,27]]]]],[],[]],"label",["subexpr","@mut",[["get","label",["loc",[null,[41,10],[41,15]]]]],[],[]],"snap",["subexpr","@mut",[["get","snap",["loc",[null,[42,9],[42,13]]]]],[],[]],"minSize",["subexpr","@mut",[["get","minSize",["loc",[null,[43,12],[43,19]]]]],[],[]],"min",["subexpr","@mut",[["get","minCtrl",["loc",[null,[44,8],[44,15]]]]],[],[]],"max",["subexpr","@mut",[["get","maxCtrl",["loc",[null,[45,8],[45,15]]]]],[],[]]],["loc",[null,[33,2],[46,4]]]]],locals:[],templates:[e]}}())}),define("dummy/config/environment",["ember"],function(e){var t="dummy";try{var a=t+"/config/environment",n=e["default"].$('meta[name="'+a+'"]').attr("content"),r=JSON.parse(unescape(n));return{"default":r}}catch(l){throw new Error('Could not read config from meta tag with name "'+a+'".')}}),runningTests||require("dummy/app")["default"].create({name:"ember-cli-elessar",version:"0.0.0+be8e4584"});